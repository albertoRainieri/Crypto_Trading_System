version: "3.5"

services:

  backend:
    privileged: true
    container_name: backend
    logging:
      driver: "json-file"
      options:
          max-size: "2m"
    build: 
      context: ./backend
      args:
        - UID=${UID}
        - GID=${GID}
    deploy:
      resources:
        limits:
          cpus: '8'
          memory: 8G
    restart: always
    # ports:
    #   - "5000:5000"
    volumes:
      - ./backend/:/backend
      - ./tracker/json:/backend/json:ro
      - ./analysis/json_tracker:/analysis/json_tracker
      - ./analysis/json_market:/analysis/json_market
      - ./analysis/benchmark_json:/analysis/benchmark_json
    env_file:
      - .env
    environment:
      - BACKEND_URL= $BACKEND_URL
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_DB_URL=$MONGO_DB_URL
      - MONGO_PORT=$MONGO_PORT
      - TZ=$TIME_ZONE
      - PRODUCTION=$PRODUCTION
      - ANALYSIS=$ANALYSIS
      - SLEEP_ANALYSIS=$SLEEP_ANALYSIS
      - COINS_TRADED=$COINS_TRADED
      - SETS_WSS_BACKEND=$SETS_WSS_BACKEND
      - MAX_CONNECTION_LOST=$MAX_CONNECTION_LOST
      - CHECK_PERIOD_MINUTES=$CHECK_PERIOD_MINUTES
      - SLEEP_LAST_LIST=$SLEEP_LAST_LIST
      - TYPE_USDT=$TYPE_USDT

    networks:
      - crypto-net

  tracker:
    container_name: tracker
    logging:
      driver: "json-file"
      options:
          max-size: "10m"
    build: 
      context: ./tracker
      args:
        - UID=${UID}
        - GID=${GID}
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
    restart: always
    # ports:
    #   - "5001:5001"
    volumes:
      - ./tracker/:/tracker
      - ./backend/constants:/tracker/constants:ro
      - ./backend/database:/tracker/database:ro
      - ./backend/app/Helpers:/tracker/app/Helpers
      - ./backend/riskmanagement:/tracker/riskmanagement
      - ./backend/user_configuration/:/tracker/user_configuration
      - ~/.ssh/userconfiguration/:/tracker/ssh
    environment:
      - BACKEND_URL=$BACKEND_URL
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_DB_URL=$MONGO_DB_URL
      - MONGO_DB_ANALYSIS_URL=$MONGO_DB_ANALYSIS_URL
      - MONGO_PORT=$MONGO_PORT
      - SETS_WSS_BACKEND=$SETS_WSS_BACKEND
      - TZ=$TIME_ZONE
      - PRODUCTION=$PRODUCTION
      - CLEAN_DB_TRADING=$CLEAN_DB_TRADING
      - MAX_EVENTS_SYNCED=$MAX_EVENTS_SYNCED
      - MAXIMUM_LOSS=$MAXIMUM_LOSS
      - SYS_ADMIN=$SYS_ADMIN
      - ANALYSIS=$ANALYSIS
      - COIN_EXCLUSIVE_ORDERBOOK_WINDOW_MINUTES=$COIN_EXCLUSIVE_ORDERBOOK_WINDOW_MINUTES
      - TYPE_USDT=$TYPE_USDT
      - ORDER_DISTRIBUTION_0LEVEL_THRESHOLD=$ORDER_DISTRIBUTION_0LEVEL_THRESHOLD
      - ORDER_DISTRIBUTION_1LEVEL_THRESHOLD=$ORDER_DISTRIBUTION_1LEVEL_THRESHOLD
      - ORDER_DISTRIBUTION_2LEVEL_THRESHOLD=$ORDER_DISTRIBUTION_2LEVEL_THRESHOLD
      - DB_UPDATE_MIN_WAITING_TIME_1LEVEL=$DB_UPDATE_MIN_WAITING_TIME_1LEVEL
      - DB_UPDATE_MIN_WAITING_TIME_2LEVEL=$DB_UPDATE_MIN_WAITING_TIME_2LEVEL
      - DB_UPDATE_MAX_WAITING_TIME=$DB_UPDATE_MAX_WAITING_TIME
      - TIMEDELTA_MINUTES_FROM_1LEVEL_DETECTED_1=$TIMEDELTA_MINUTES_FROM_1LEVEL_DETECTED_1
      - TIMEDELTA_MINUTES_FROM_1LEVEL_DETECTED_2=$TIMEDELTA_MINUTES_FROM_1LEVEL_DETECTED_2
      - MAX_WAITING_TIME_AFTER_BUY=$MAX_WAITING_TIME_AFTER_BUY
    networks:
      - crypto-net

  mongo-analysis:

    container_name: mongo-analysis
    logging:
      driver: "json-file"
      options:
          max-size: "5m"
    build: 
      context: ./mongodb
      args:
        - UID=${UID}
        - GID=${GID}
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_DB_URL=$MONGO_DB_URL
      - MONGO_DB_NAME=$MONGO_DB_NAME
      - MONGO_PORT=$MONGO_PORT
      - MONGO_VERSION=$MONGO_VERSION
      - TZ=$TIME_ZONE
      
    restart: always
    # ports:
    #   - "27017:27017"
    
    volumes:
      - ./mongodb_analysis/db:/data/db
    networks:
      - crypto-net

  mongo:
    container_name: mongo
    logging:
      driver: "json-file"
      options:
          max-size: "5m"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
    build: 
      context: ./mongodb
      args:
        - UID=${UID}
        - GID=${GID}
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_DB_URL=$MONGO_DB_URL
      - MONGO_DB_NAME=$MONGO_DB_NAME
      - MONGO_PORT=$MONGO_PORT
      - MONGO_VERSION=$MONGO_VERSION
      - TZ=$TIME_ZONE
      
    restart: always
    # ports:
    #   - "27017:27017"
    
    volumes:
      - ./mongodb/db:/data/db
    networks:
      - crypto-net

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    user: 1000:1000
    logging:
      driver: "json-file"
      options:
          max-size: "5m"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
    restart: always
    # ports:
    #   - "8081:8081"
    environment:
      #ME_CONFIG_MONGODB_SERVER: mongo-analysis
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_AUTH_USERNAME: $MONGO_INITDB_ROOT_USERNAME
      ME_CONFIG_MONGODB_AUTH_PASSWORD: $MONGO_INITDB_ROOT_PASSWORD
      ME_CONFIG_BASICAUTH_USERNAME: $MONGO_EXPRESS_USERNAME # to enable auth in mongo-express gui
      ME_CONFIG_BASICAUTH_PASSWORD: $MONGO_EXPRESS_PASSWORD
      ME_CONFIG_SITE_BASEURL: "/mongo"
      #ME_CONFIG_MONGODB_URL: mongodb://root:password@mongo:27017/
    depends_on:
      - mongo
    networks:
        - crypto-net

  nginx:
    container_name: nginx
    build:
      context: ./nginx
      args:
        - UID=${UID}
        - GID=${GID}
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
    restart: always
    ports:
      - "80:80"
      #- "443:443"
    volumes:
      - ./nginx/logs/:/var/log/nginx
      - ./nginx/conf/default:/etc/nginx/sites-available/default
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    networks:
      - crypto-net


  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/logs:/var/log/
      - ./certbot/conf/:/etc/letsencrypt/:rw

  
networks:
  crypto-net:
    driver: bridge