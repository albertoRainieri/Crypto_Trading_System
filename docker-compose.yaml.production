version: "3.5"

services:

  backend:
    container_name: backend-crypto
    logging:
      driver: "json-file"
      options:
          max-size: "2m"
    build: 
      context: ./backend
      args:
        - UID=${UID}
        - GID=${GID}
    restart: always
    # ports:
    #   - "5000:5000"
    volumes:
      - ./backend/:/backend
      - ./tracker/json:/backend/json:ro
    env_file:
      - .env
    environment:
      - BACKEND_URL= $BACKEND_URL
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_DB_URL=$MONGO_DB_URL
      - MONGO_PORT=$MONGO_PORT
      - TZ=$TIME_ZONE
      - PRODUCTION=$PRODUCTION
    networks:
      - local-net

  tracker:
    container_name: tracker-crypto
    logging:
      driver: "json-file"
      options:
          max-size: "10m"
    build: 
      context: ./tracker
      args:
        - UID=${UID}
        - GID=${GID}
    
    restart: always
    # ports:
    #   - "5001:5001"
    volumes:
      - ./tracker/:/tracker
      - ./backend/constants:/tracker/constants:ro
      - ./backend/database:/tracker/database:ro
      - ./backend/app/Helpers:/tracker/app/Helpers
      - ./backend/riskmanagement:/tracker/riskmanagement
    environment:
      - BACKEND_URL= $BACKEND_URL
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_DB_URL=$MONGO_DB_URL
      - MONGO_PORT=$MONGO_PORT
      - TZ=$TIME_ZONE
      - PRODUCTION=$PRODUCTION
      - CLEAN_DB_TRADING=$CLEAN_DB_TRADING
      - INVESTMENT_AMOUNT=$INVESTMENT_AMOUNT

    networks:
      - local-net

  trading:
    container_name: trading-crypto
    logging:
      driver: "json-file"
      options:
          max-size: "10m"
    build: 
      context: ./trading
      args:
        - UID=${UID}
        - GID=${GID}
    restart: always
    volumes:
      - ./trading/:/trading
      - ./backend/constants:/trading/constants:ro
      - ./backend/database:/trading/database:ro
      - ./backend/app/Helpers:/trading/app/Helpers
      - ./tracker/json:/trading/json:ro

    environment:
      - BACKEND_URL= $BACKEND_URL
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_DB_URL=$MONGO_DB_URL
      - MONGO_PORT=$MONGO_PORT
      - TZ=$TIME_ZONE
    networks:
      - local-net

  mongo:
    container_name: mongo-crypto
    logging:
      driver: "json-file"
      options:
          max-size: "5m"
    build: 
      context: ./mongodb
      args:
        - UID=${UID}
        - GID=${GID}
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_DB_URL=$MONGO_DB_URL
      - MONGO_DB_NAME=$MONGO_DB_NAME
      - MONGO_PORT=$MONGO_PORT
      - MONGO_VERSION=$MONGO_VERSION
      - TZ=$TIME_ZONE
      
    restart: always
    # ports:
    #   - "27017:27017"
    
    volumes:
      - ./mongodb/db:/data/db
    networks:
      - local-net

  mongo-express:
    image: mongo-express
    user: 1000:1000
    logging:
      driver: "json-file"
      options:
          max-size: "5m"
    container_name: mongo-express-crypto
    restart: always
    # ports:
    #   - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_AUTH_USERNAME: $MONGO_INITDB_ROOT_USERNAME
      ME_CONFIG_MONGODB_AUTH_PASSWORD: $MONGO_INITDB_ROOT_PASSWORD
      ME_CONFIG_BASICAUTH_USERNAME: $MONGO_EXPRESS_USERNAME # to enable auth in mongo-express gui
      ME_CONFIG_BASICAUTH_PASSWORD: $MONGO_EXPRESS_PASSWORD
      ME_CONFIG_SITE_BASEURL: "/mongo"
      #ME_CONFIG_MONGODB_URL: mongodb://root:password@mongo:27017/
    depends_on:
      - mongo
    networks:
        - local-net

  nginx:
    build:
      context: ./nginx
      args:
        - UID=${UID}
        - GID=${GID}
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/logs/:/var/log/nginx
      - ./nginx/conf/default:/etc/nginx/sites-available/default
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    networks:
      - local-net


  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/logs:/var/log/
      - ./certbot/conf/:/etc/letsencrypt/:rw

  
networks:
  local-net:
    driver: bridge